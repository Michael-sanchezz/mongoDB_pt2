1.Add a person to the collection. You pick the data, but they should have an empty array for children.
db.people.insertOne({
    first_name: "Tom",
    last_name: "Holland",
    age: 30,
    gender: "Male",
    state: "California",
    email: "spiderman@gmail.com",
    children: []
})

2.Add another person. They should have at least two children.
db.people.insertOne({
    first_name: "Tony",
    last_name: "Stark",
    age: 38,
    gender: "Male",
    state: "New York",
    email: "Ironman@gmail.com",
    children: [
        { first_name: "Alice", age: 8 },
        { first_name: "Bob", age: 6 }
    ]
})

3.Update one person named Clarence. He moved from North Dakota to South Dakota.
db.people.updateOne(
    { first_name: "Clarence" },
    { $set: { state: "South Dakota" } }
)

4.Update Rebecca Hayes. Remove her email address.
db.people.updateOne(
    { first_name: "Rebecca", last_name: "Hayes" },
    { $unset: { email: "" } }
)

5.Update everyone from Missouri. They all had a birthday today, so add one to their age. (expect 4 matches)
db.people.updateMany(
    { state: "Missouri" },
    { $inc: { age: 1 } }
)
6.Jerry Baker has updated information. Replace with a new document:
{ first_name: "Jerry", last_name: "Baker-Mendez", email: "jerry@classic.ly", gender:"Male", age: 28, state: "Vermont", "children": [{name: "Alan", age: 18}, {name: "Jenny", age: 3}] }

7.Delete Wanda Bowman.
db.people.deleteOne({ first_name: "Wanda", last_name: "Bowman" })

8.Delete everyone who does not have an email address specified. (expect 36 matches - maybe more depending what you added above)
db.people.deleteMany({ email: null })

9.Create a single field index on the email field.
db.people.createIndex({ email: 1 })

10.Create a compound index on the first_name and last_name fields.
db.people.createIndex({ first_name: 1, last_name: 1 })

11.Add several documents to a new submissions collection. Do it all in one command. (Remember, MongoDB will create the collection for you. Just start adding documents.)
title: "The River Bend", upvotes: 10, downvotes: 2, artist: <ID of Anna Howard>
title: "Nine Lives", upvotes: 7, downvotes: 0, artist: <ID of Scott Henderson>
title: "Star Bright", upvotes: 19, downvotes: 3, artist: <ID of Andrea Burke>
title: "Why Like This?", upvotes: 1, downvotes: 5, artist: <ID of Steven Marshall>
title: "Non Sequitur", upvotes: 11, downvotes: 1, artist: <ID of Gerald Bailey>

db.submissions.insertMany([
  { title: "The River Bend", upvotes: 10, downvotes: 2, artist: ObjectId("611d9e4bbf42a68431d9b96c") },
  { title: "Nine Lives", upvotes: 7, downvotes: 0, artist: ObjectId("611d9e4bbf42a68431d9b96d") },
  { title: "Star Bright", upvotes: 19, downvotes: 3, artist: ObjectId("611d9e4bbf42a68431d9b96e") },
  { title: "Why Like This?", upvotes: 1, downvotes: 5, artist: ObjectId("611d9e4bbf42a68431d9b96f") },
  { title: "Non Sequitur", upvotes: 11, downvotes: 1, artist: ObjectId("611d9e4bbf42a68431d9b970") }
])

12.Add 2 upvotes for "The River Bend".
db.submissions.updateOne(
    { title: "The River Bend" },
    { $inc: { upvotes: 2 } }
)

13.Add a field round2 = true to all submissions with at least 10 upvotes. (expect 3 matches)
db.submissions.updateMany(
    { upvotes: { $gte: 10 } },
    { $set: { round2: true } }
)